(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./src/Button/README.md":function(n,o,t){"use strict";t.r(o),o.default='# Button 按钮\n用于承载用户的点击操作\n\n## 使用\n\n在页面 `json` 中引入按钮组件：\n\n```json\n// import in `page.json`:\n"usingComponents": {\n  "oak-button": "path/to/your/oakui/Button/button"\n}\n```\n\n在页面使用\n```html\n\x3c!-- use in `page.wxml` --\x3e\n<oak-button />\n```\n\n\n## 代码演示\n### 按钮类型\n按钮类型有四种：主要按钮、普通按钮、危险按钮、信息按钮。默认为普通按钮\n```html\n<oak-button>Default</oak-button>\n<oak-button type="primary">Primary</oak-button>\n<oak-button type="danger">Danger</oak-button>\n<oak-button type="info">Info</oak-button>\n```\n### 按钮大小\n按钮大小有 大、中、小以及块状四种尺寸。块状按钮宽度为父元素100%。\n通过设置`size`属性来控制，默认为中(`Default`)。\n```html\n<oak-button size=\'block\'\n            type="primary">Block</oak-button>\n<oak-button size=\'large\'>Large</oak-button>\n<oak-button type="danger">Default</oak-button>\n<oak-button size=\'small\'\n            type="info">Small</oak-button>\n```\n### 图标按钮\n在按钮中嵌入图标有两种方式：\n\n1. 设置 `icon` 属性，传入icon的名称。\n2. 直接使用 `<Icon />` 组件。\n```html\n <oak-button icon="downloader"\n            type="primary"\n            size="large">Downloader</oak-button>\n<oak-button icon="search">Search</oak-button>\n<oak-button icon="wechat"\n            size=\'small\'\n            type="info">Wechat</oak-button>\n<oak-button size="block"><Icon name=\'cart\' /> 使用icon组件</oak-button>\n```\n\n### 按钮透明\n设置`plain`属性可以使按钮的内容反色，背景透明。\n```html\n<oak-button plain>Default</oak-button>\n<oak-button plain\n            type="primary">Primary</oak-button>\n<oak-button plain\n            type="danger">Danger</oak-button>\n<oak-button plain\n            type="info">Info</oak-button>\n```\n\n### 按钮不可用\n设置`disabled`属性使按钮变为不可用状态。\n```html\n<oak-button disabled>Default</oak-button>\n<oak-button disabled\n            type="primary">Primary</oak-button>\n<oak-button disabled\n            type="danger">Danger</oak-button>\n<oak-button disabled\n            type="info">Info</oak-button>\n```\n\n### 加载状态\n添加 `loading` 属性即可让按钮处于加载状态，loading 状态下按钮与`disabled`具有相同的属性。\n同时可以通过 `loaderColor` 控制loading的颜色。\n```html\n<oak-button loading\n            size=\'block\'\n            loaderColor="#fff"\n            type="primary"> 加载中...</oak-button>\n<oak-button loading\n            size=\'large\'> Loading</oak-button>\n<oak-button loading\n            loaderColor="#fff"\n            type="danger"> Loading</oak-button>\n<oak-button loading\n            size=\'small\'\n            type="info"> Loading</oak-button>\n```\n\n### 按钮形状\n按钮形状有三种：圆角(`round`)、圆形(`circle`)、扁平(`square`)，不设置为默认样式。\n```html\n<oak-button>Default</oak-button>\n<oak-button shape=\'circle\'>Circle</oak-button>\n<oak-button shape=\'round\'>Round</oak-button>\n<oak-button shape=\'square\'>Square</oak-button>\n```\n\n## API\n通过设置 Button 的属性来控制按钮不同样式。\n\n按钮的属性说明如下：\n\n| 属性 | 说明 | 类型 | 默认值 |\n|-----------|-----------|-----------|-------------|\n| type | 按钮类型，可选值为 `primary`、`danger`、`info`, 或者不设 | `string` | `default` |\n| size | 按钮大小，可选值为 `large`、`small`、`block`, 或者不设| `string` | `default` |\n| plain | 背景透明，内容反色| `boolen` | `false` |\n| icon | 图标名 | `string` | - |\n| disabled | 按钮不可用 | `boolen` | `false` |\n| loading | 加载状态 | `boolen` | `false` |\n| loader-color | Loading 颜色| `string` | - |\n| loader-size | Loading 大小， 参考 [Loading 组件](https://yh-yunchuang-fe.github.io/oak/#/components/Loading) | `string` | - |\n| shape | 按钮形状，可选值为 `circle`、`round`、`square`, 或者不设| `string` | - |\n| width | 自定义按钮宽度 | `string` | - |\n| height | 自定义按钮高度 | `string` | - |\n| color | 按钮背景色 | `string` | - |\n\n> 其他属性与小程序 [button](https://developers.weixin.qq.com/miniprogram/dev/component/button.html) 组件同步。\n\n## 外部样式类\n\n| 类名 | 说明 |\n|-----------|-----------|\n| hover-class | 设置按钮hover时的样式 |\n| button-class | 作用于按钮 |\n| loading-class | 作用于loader |\n\n\n\n\n\n\x3c!--PreviewGifLink: https://static.yonghuivip.com/wechatapp/static/gif/button_1.gif --\x3e\n\x3c!--PreviewQrCodeLink: https://static.yonghuivip.com/wechatapp/static/images/pages_button_index.png --\x3e'}}]);