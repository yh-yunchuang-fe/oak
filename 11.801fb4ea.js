(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./src/Button/README.md":function(o,n,t){"use strict";t.r(n),n.default='# Button 按钮\n用于承载用户的点击操作\n\n## 使用\n\n在页面 `json` 中引入按钮组件：\n\n```json\n// import in `page.json`:\n"usingComponents": {\n  "oak-button": "path/to/your/oakui/Button/button"\n}\n```\n\n在页面使用\n```html\n\x3c!-- use in `page.wxml` --\x3e\n<oak-button />\n```\n\n\n## 代码演示\n### 按钮颜色\n按钮颜色有二种：主要颜色、普通颜色。默认为普通颜色\n```html\n<oak-button>Default</oak-button>\n<oak-button color="primary">Primary</oak-button>\n```\n### 按钮大小\n按钮大小有 large、middle、small、mini以及块状（block）五种尺寸：\n\n1. 前四种尺寸通过设置`size`属性来控制，默认为中(`middle`)\n2. 块状按钮通过`block`属性控制，宽度为父元素100%\n```html\n<oak-button block>Block</oak-button>\n<oak-button block color="primary" size=\'large\'>Large Block</oak-button>\n<oak-button block color="primary" size=\'large\' angle>Large Angle Block</oak-button>\n<oak-button size=\'large\'>Large</oak-button>\n<oak-button size="middle">Middle</oak-button>\n<oak-button size=\'small\'>Small</oak-button>\n<oak-button size=\'mini\'>Mini</oak-button>\n<oak-button color="primary" size=\'large\'>Large</oak-button>\n<oak-button color="primary" size="middle">Middle</oak-button>\n<oak-button color="primary" size=\'small\'>Small</oak-button>\n<oak-button color="primary" size=\'mini\'>Mini</oak-button>\n```\n### 填充模式\n填充模式有 solid、outline、none 三种尺寸，默认为solid\n```html\n<oak-button color="primary" fill="solid">solid</oak-button>\n<oak-button color="primary" fill="outline">outline</oak-button>\n<oak-button color="primary" fill="none">none</oak-button>\n```\n### 按钮形状\n按钮形状有 胶囊、圆角、直角 三种尺寸，默认为胶囊\n```html\n<oak-button>胶囊（默认）</oak-button>\n<oak-button round>圆角</oak-button>\n<oak-button angle>直角</oak-button>\n\n<oak-button color="primary" fill="outline">胶囊（默认）</oak-button>\n<oak-button color="primary" fill="outline" round>圆角</oak-button>\n<oak-button color="primary" fill="outline" angle>直角</oak-button>\n\n<oak-button color="primary" size=\'small\'>胶囊（默认）</oak-button>\n<oak-button color="primary" size=\'small\' round >圆角 </oak-button>\n<oak-button color="primary" size=\'small\' angle >直角 </oak-button>\n```\n### 加载状态\n添加 `loading` 属性即可让按钮处于加载状态，loading 状态下按钮与`disabled`具有相同的属性。\n```html\n<oak-button size=\'large\' fill="outline" loading>Loading</oak-button>\n<oak-button size=\'middle\' fill="outline" loading>Loading</oak-button>\n<oak-button size=\'small\' fill="outline" loading>Loading</oak-button>\n\n<oak-button color="primary" size=\'large\' fill="outline" round loading>Loading</oak-button>\n<oak-button color="primary" size=\'middle\' fill="outline" round loading>Loading</oak-button>\n<oak-button color="primary" size=\'small\' fill="outline" round loading>Loading</oak-button>\n\n<oak-button color="primary" size=\'large\' loading>Loading</oak-button>\n<oak-button color="primary" size=\'middle\' loading>Loading</oak-button>\n<oak-button color="primary" size=\'small\' loading>Loading</oak-button>\n```\n### 待唤起\n添加 `waiting` 属性即可让按钮处于待唤起状态\n```html\n<oak-button fill="outline" round waiting>waiting</oak-button>\n<oak-button color="primary" round waiting>waiting</oak-button>\n<oak-button color="primary" fill="outline" round waiting>waiting</oak-button>\n```\n### 禁用状态\n添加 `disabled` 属性即可让按钮处于待禁用状态\n```html\n<oak-button fill="outline" round disabled>disabled</oak-button>\n<oak-button color="primary" disabled>disabled</oak-button>\n<oak-button color="primary" fill="outline" round disabled>disabled</oak-button>\n```\n\n### 按钮+图标\n在按钮中嵌入图标有两种方式：\n\n1. 设置 `icon` 属性，传入icon的名称。\n2. 直接使用 `<Icon />` 组件。\n```html\n<oak-button icon="down-bold" color="primary" round>分类</oak-button>\n<oak-button icon="down-bold" color="primary" size="small" fill="outline">分类</oak-button>\n<oak-button icon="close-facet" color="primary" size="small">取消</oak-button>\n<oak-button icon="refresh" size="small">刷新</oak-button>\n<oak-button icon="down-bold" color="primary" size="small" fill="none">分类</oak-button>\n```\n\n## API\n通过设置 Button 的属性来控制按钮不同样式。\n\n按钮的属性说明如下：\n\n| 属性 | 说明 | 类型 | 默认值 |\n|-----------|-----------|-----------|-------------|\n| color | 按钮颜色，可选值为 `primary`、`default`, 或者不设 | `string` | `default` |\n| size | 按钮大小，可选值为 `large`、`middle`、`small`、`mini`, 或者不设| `string` | `middle` |\n| fill | 填充模式，可选值为 `solid`、`outline`、`none`, 或者不设| `string` | `solid` |\n| block | 是否是块级元素| `boolen` | `false` |\n| round | 按钮形状-圆角| `boolen` | `false` |\n| angle | 按钮形状-直角| `boolen` | `false` |\n| waiting | 待唤起状态 | `boolen` | `false` |\n| disabled | 按钮不可用 | `boolen` | `false` |\n| loading | 加载状态 | `boolen` | `false` |\n| loading-text | Loading 时显示的文案| `string` | - |\n| icon | 图标名 | `string` | - |\n\n> 其他属性与小程序 [button](https://developers.weixin.qq.com/miniprogram/dev/component/button.html) 组件同步。\n\n## 外部样式类\n\n| 类名 | 说明 |\n|-----------|-----------|\n| button-class | 作用于按钮 |\n| hover-class | 设置按钮hover时的样式 |\n| loading-class | 作用于loader |\n\n\n\n\x3c!--PreviewGifLink: https://static.yonghuivip.com/wechatapp/static/gif/button_2.gif?2 --\x3e\n\x3c!--PreviewQrCodeLink: https://static.yonghuivip.com/wechatapp/static/images/pages_button_index.png --\x3e'}}]);