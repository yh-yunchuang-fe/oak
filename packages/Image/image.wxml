<wxs module='ws'>
    function getSrc (src, useWebp, width, pixelRatio, quality, imgRadius) {
        if (src.indexOf('/service') > -1) return src

        width = width ? width + '' : width

        var baseUrl = src
            .replace('image.yonghuivip.com//', 'image.yonghuivip.com/')
            .split('?')[0]
            
        var thumbnail = width.match("\d+", "g") || ""
            , format = _getExt(src, useWebp)
            , service_w = ((src.split("w=")[1]) || "").split('&h=')[0] || ""
            , script = service_w ? "thumbnail/" + service_w + "x/" : ""
            ;

        if (hasUnit(width.toLowerCase(), 'px')) {
            thumbnail = pixelRatio >= 2 ? thumbnail * 2 : thumbnail * pixelRatio
            thumbnail = (service_w && service_w < thumbnail) ? service_w : thumbnail
        }

        if (width) script = "thumbnail/" + thumbnail + "x/"
        var query = "imageMogr2/auto-orient/" 
            + script 
            + "strip/format/" 
            + format 
            + "/interlace/1/quality/"+ quality +"/size-limit/300k!"
            ;

        if (!imgRadius || imgRadius.split(" ").length !== 1) return baseUrl + "?" + query

        var radius = imgRadius.match("\d+", "g")
        if (hasUnit(imgRadius.toLowerCase(), 'rpx')) radius = radius / 2

        radius = radius * pixelRatio

        return baseUrl + "?roundPic/radius/" + radius + "|" + query
    }

    function hasUnit(size, unit) {
        if (!size) return false
        if (!size.match("[a-z|A-Z]+", "g") && unit === "px") return true

        return getRegExp("^\d+" + unit + "+$", 'g').test(size.toLowerCase())
    }

    function getLength(value) {
        if (!value) return ""
        
        value = value + ''

        var length = value.match("\d+", "g")

        if (hasUnit(value.toLowerCase(), 'px')) length = length * 2

        return length
    }

    function _getExt(src, useWebp) {
        var fileUrl = src.split('?')[0]
        var splitUlr = fileUrl.split('/')
        var filepath = splitUlr[splitUlr.length - 1]
        var format = filepath.split('.')[1] || 'jpg'

        return 'webp'
    }

    function getStyle(bgImg, width, height, radius, imgRadius, noBgImg) {
        var r = ""
        var b = bgImg && !noBgImg ? "background-image: url('" + bgImg + "');" : ''
        var w = width ? 'width:' + getLength(width) + 'rpx;' : ''
        var h = height ? 'height:' + getLength(height) + 'rpx;' : 'min-height:1px;'
        
        if (radius && radius.length === 1) r = radius[0] + 'rpx'
        if (radius && radius.length === 4) {
            for(var i = 0; i < radius.length; i++) {
                r += radius[i] + "rpx "
            }
        }
        if (r) r = ";border-radius: " + r
        if (imgRadius && imgRadius.split(" ").length === 1) r = ""

        return b + w + h + r + ';'
    }

    function split(str, separator, howmany) {
        return (str && str.split(separator, howmany)) || []
    }

    function onLoad(e, ownerInstance) {
        var instance = ownerInstance.selectComponent('#image-wrap')
        instance && instance.addClass('oak-image-load')
        ownerInstance.triggerEvent('load')
    }
    
    function onError(e, ownerInstance) {
        var instance = ownerInstance.selectComponent('#image-wrap')
        instance && instance.removeClass('oak-image-load')
    }

    function clickImg(e) {
        var src = e.target.dataset.src
        ownerInstance.triggerEvent('clickImage', { src })
    }

    module.exports = {
        getSrc: getSrc,
        getStyle: getStyle,
        split: split,
        onLoad: onLoad,
        onError: onError,
        clickImg: clickImg,
    }
</wxs>

<view id="image-wrap" 
    class="oak-image class ext-class" 
    style="{{ws.getStyle(bgImg, width, height, radius, imgRadius, noBgImg)}}"
>
    <image wx:if="{{src}}"
        class="origin-image img-class"
        src="{{ws.getSrc(src, useWebp, width, pixelRatio, quality, imgRadius)}}" 
        style="{{ws.split(imgRadius, ' ').length > 1 ? 'border-radius:' + imgRadius : ''}}"
        mode="{{mode}}"
        webp="{{webp}}"
        lazy-load="{{lazyLoad}}"
        data-src="{{src}}"
        bindload="{{ws.onLoad}}"
        bindtap="{{ws.clickImg}}"
        binderror="{{ws.onError}}"
    />
</view>
